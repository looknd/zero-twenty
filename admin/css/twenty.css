.flex-display {
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: -ms-flex;
  display: flex;
}
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background-color: transparent;
}
a:active,
a:hover {
  outline: 0;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
dfn {
  font-style: italic;
}
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
mark {
  background: #ff0;
  color: #000;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
figure {
  margin: 1em 40px;
}
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code {
  font-size: 1em;
  background-color: #F2F2F2;
  color: #999;
  padding: 10px;
  border-radius: 3px;
  display: inline-block;
}
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input {
  line-height: normal;
}
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  border: 0;
  padding: 0;
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: bold;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
/*! Source: https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css */
@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  a,
  a:visited {
    text-decoration: underline;
  }
  a[href]:after {
    content: " (" attr(href) ")";
  }
  abbr[title]:after {
    content: " (" attr(title) ")";
  }
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: "";
  }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
  select {
    background: #fff !important;
  }
  .navbar {
    display: none;
  }
  .btn > .caret,
  .dropup > .btn > .caret {
    border-top-color: #000 !important;
  }
  .label {
    border: 1px solid #000;
  }
  .table {
    border-collapse: collapse !important;
  }
  .table td,
  .table th {
    background-color: #fff !important;
  }
  .table-bordered th,
  .table-bordered td {
    border: 1px solid #ddd !important;
  }
}
* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
*:before,
*:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
html {
  font-size: 10px;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 14px;
  line-height: 1.42857143;
  color: #333333;
  background-color: #ffffff;
}
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
a {
  color: #828282;
  text-decoration: none;
}
a:hover,
a:focus {
  color: #76DF7E;
}
a:focus {
  outline: thin dotted;
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}
figure {
  margin: 0;
}
img {
  vertical-align: middle;
}
.img-responsive {
  display: block;
  max-width: 100%;
  height: auto;
}
.img-rounded {
  border-radius: 6px;
}
.img-thumbnail {
  padding: 4px;
  line-height: 1.42857143;
  background-color: #ffffff;
  border: 1px solid #dddddd;
  border-radius: 4px;
  -webkit-transition: all 0.2s ease-in-out;
  -o-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  display: inline-block;
  max-width: 100%;
  height: auto;
}
.img-circle {
  border-radius: 50%;
}
hr {
  margin-top: 20px;
  margin-bottom: 20px;
  border: 0;
  border-top: 1px solid #d9d9d9;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}
.sr-only-focusable:active,
.sr-only-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip: auto;
}
h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  font-family: inherit;
  font-weight: 500;
  line-height: 1.1;
  color: inherit;
}
h1 small,
h2 small,
h3 small,
h4 small,
h5 small,
h6 small,
.h1 small,
.h2 small,
.h3 small,
.h4 small,
.h5 small,
.h6 small,
h1 .small,
h2 .small,
h3 .small,
h4 .small,
h5 .small,
h6 .small,
.h1 .small,
.h2 .small,
.h3 .small,
.h4 .small,
.h5 .small,
.h6 .small {
  font-weight: normal;
  line-height: 1;
  color: #999999;
}
h1,
.h1,
h2,
.h2,
h3,
.h3 {
  margin-top: 20px;
  margin-bottom: 10px;
}
h1 small,
.h1 small,
h2 small,
.h2 small,
h3 small,
.h3 small,
h1 .small,
.h1 .small,
h2 .small,
.h2 .small,
h3 .small,
.h3 .small {
  font-size: 65%;
}
h4,
.h4,
h5,
.h5,
h6,
.h6 {
  margin-top: 10px;
  margin-bottom: 10px;
}
h4 small,
.h4 small,
h5 small,
.h5 small,
h6 small,
.h6 small,
h4 .small,
.h4 .small,
h5 .small,
.h5 .small,
h6 .small,
.h6 .small {
  font-size: 75%;
}
h1,
.h1 {
  font-size: 30px;
  font-weight: bold;
  letter-spacing: 1px;
}
h2,
.h2 {
  font-size: 30px;
}
h3,
.h3 {
  font-size: 24px;
}
h4,
.h4 {
  font-size: 16px;
}
h5,
.h5 {
  font-size: 14px;
}
h6,
.h6 {
  font-size: 12px;
}
p {
  margin: 0 0 10px;
}
.lead {
  margin-bottom: 20px;
  font-size: 16px;
  font-weight: 300;
  line-height: 1.4;
}
@media (min-width: 768px) {
  .lead {
    font-size: 21px;
  }
}
small,
.small {
  font-size: 85%;
}
mark,
.mark {
  background-color: #fcf8e3;
  padding: .2em;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}
.text-center {
  text-align: center;
}
.text-justify {
  text-align: justify;
}
.text-nowrap {
  white-space: nowrap;
}
.text-lowercase {
  text-transform: lowercase;
}
.text-uppercase {
  text-transform: uppercase;
}
.text-capitalize {
  text-transform: capitalize;
}
.text-muted {
  color: #999999;
}
.text-primary {
  color: #428bca;
}
a.text-primary:hover {
  color: #3071a9;
}
.text-success {
  color: #3c763d;
}
a.text-success:hover {
  color: #2b542c;
}
.text-info {
  color: #31708f;
}
a.text-info:hover {
  color: #245269;
}
.text-warning {
  color: #8a6d3b;
}
a.text-warning:hover {
  color: #66512c;
}
.text-danger {
  color: #a94442;
}
a.text-danger:hover {
  color: #843534;
}
.bg-primary {
  color: #fff;
  background-color: #428bca;
}
a.bg-primary:hover {
  background-color: #3071a9;
}
.bg-success {
  background-color: #dff0d8;
}
a.bg-success:hover {
  background-color: #c1e2b3;
}
.bg-info {
  background-color: #d9edf7;
}
a.bg-info:hover {
  background-color: #afd9ee;
}
.bg-warning {
  background-color: #fcf8e3;
}
a.bg-warning:hover {
  background-color: #f7ecb5;
}
.bg-danger {
  background-color: #f2dede;
}
a.bg-danger:hover {
  background-color: #e4b9b9;
}
.page-header {
  padding-bottom: 9px;
  margin: 40px 0 20px;
  border-bottom: 1px solid #d9d9d9;
}
ul,
ol {
  margin-top: 0;
  margin-bottom: 10px;
}
ul ul,
ol ul,
ul ol,
ol ol {
  margin-bottom: 0;
}
.list-unstyled {
  padding-left: 0;
  list-style: none;
}
.list-inline {
  padding-left: 0;
  list-style: none;
  margin-left: -5px;
}
.list-inline > li {
  display: inline-block;
  padding-left: 5px;
  padding-right: 5px;
}
dl {
  margin-top: 0;
  margin-bottom: 20px;
}
dt,
dd {
  line-height: 1.42857143;
}
dt {
  font-weight: bold;
}
dd {
  margin-left: 0;
}
@media (min-width: 768px) {
  .dl-horizontal dt {
    float: left;
    width: 160px;
    clear: left;
    text-align: right;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .dl-horizontal dd {
    margin-left: 180px;
  }
}
abbr[title],
abbr[data-original-title] {
  cursor: help;
  border-bottom: 1px dotted #999999;
}
.initialism {
  font-size: 90%;
  text-transform: uppercase;
}
blockquote {
  padding: 10px 20px;
  margin: 0 0 20px;
  font-size: 17.5px;
  border-left: 5px solid #d9d9d9;
}
blockquote p:last-child,
blockquote ul:last-child,
blockquote ol:last-child {
  margin-bottom: 0;
}
blockquote footer,
blockquote small,
blockquote .small {
  display: block;
  font-size: 80%;
  line-height: 1.42857143;
  color: #999999;
}
blockquote footer:before,
blockquote small:before,
blockquote .small:before {
  content: '\2014 \00A0';
}
.blockquote-reverse,
blockquote.pull-right {
  padding-right: 15px;
  padding-left: 0;
  border-right: 5px solid #d9d9d9;
  border-left: 0;
  text-align: right;
}
.blockquote-reverse footer:before,
blockquote.pull-right footer:before,
.blockquote-reverse small:before,
blockquote.pull-right small:before,
.blockquote-reverse .small:before,
blockquote.pull-right .small:before {
  content: '';
}
.blockquote-reverse footer:after,
blockquote.pull-right footer:after,
.blockquote-reverse small:after,
blockquote.pull-right small:after,
.blockquote-reverse .small:after,
blockquote.pull-right .small:after {
  content: '\00A0 \2014';
}
address {
  margin-bottom: 20px;
  font-style: normal;
  line-height: 1.42857143;
}
html,
body {
  height: 100%;
  overflow-y: hidden;
}
.container {
  height: 100%;
  width: 100%;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: -ms-flex;
  display: flex;
}
.left-side {
  -webkit-flex: none;
  -moz-flex: none;
  -ms-flex: none;
  flex: none;
  width: 200px;
  position: relative;
}
.right-side {
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1;
  height: 100%;
  overflow-y: auto ;
}
.page {
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: -ms-flex;
  display: flex;
  height: 100%;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}
.page .page-head {
  border-bottom: 1px #eee solid;
  -webkit-flex: none;
  -moz-flex: none;
  -ms-flex: none;
  flex: none;
}
.page .page-body {
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: -ms-flex;
  display: flex;
  flex-direction: row;
  overflow: hidden;
}
.page .page-body .page-left {
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow-y: auto ;
}
.page .page-body .page-right {
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1;
  border-left: 1px #eee solid;
  overflow-y: auto ;
}
/*
    Component: Sidebar
--------------------------
*/
.sidebar {
  background: #2A2D31;
  padding: 20px 22px;
}
.sidebar a {
  display: block;
  font-size: 14px;
}
.sidebar a:hover {
  color: #fff;
  text-decoration: none;
}
.sidebar .logo img {
  width: 100%;
}
.sidebar .sidebar-menu {
  list-style: none;
  margin: 0;
  padding: 0;
}
.sidebar .sidebar-menu > li {
  margin: 0;
  padding: 0;
}
.sidebar .sidebar-menu > li > a {
  padding: 14px 5px 14px 15px;
  display: block;
  font-size: 14px;
  color: rgba(255, 255, 255, 0.25);
  outline: none;
  text-decoration: none;
  letter-spacing: 0.02em;
}
.sidebar .sidebar-menu > li > a :hover {
  color: #ffffff;
}
.sidebar .sidebar-menu > li.active a {
  color: #ffffff;
}
.sidebar .slogon {
  text-align: center;
  font-size: 14px;
  color: rgba(255, 255, 255, 0.1);
}
.sidebar .logout {
  position: absolute;
  bottom: 10px;
  left: 0;
  display: block;
  text-align: center;
  width: 100%;
}
.sidebar .logout a {
  color: rgba(255, 255, 255, 0.25);
  padding: 0 80px 10px 0px;
}
.user-panel {
  padding: 10px;
}
.user-panel:before,
.user-panel:after {
  content: " ";
  display: table;
}
.user-panel:after {
  clear: both;
}
.user-panel:before,
.user-panel:after {
  content: " ";
  display: table;
}
.user-panel:after {
  clear: both;
}
.user-panel > .image > img {
  width: 45px;
  height: 45px;
}
.user-panel > .info {
  font-weight: 600;
  font-size: 14px;
  line-height: 45px;
}
.user-panel > .info > p {
  margin-bottom: 9px;
}
.user-panel > .info > a {
  text-decoration: none;
  color: #fff;
  padding-right: 5px;
  margin-top: 3px;
  font-size: 11px;
  font-weight: normal;
}
.user-panel > .info > a > .fa,
.user-panel > .info > a > .ion,
.user-panel > .info > a > .glyphicon {
  margin-right: 3px;
}
.btn {
  display: inline-block;
  border: 1px #676767 solid;
  text-decoration: none;
  padding: 0 16px;
  height: 32px;
  line-height: 32px;
  cursor: pointer;
  text-align: center;
  -webkit-border-radius: 16px;
  -moz-border-radius: 16px;
  border-radius: 16px;
  background: transparent;
}
.btn:hover,
.btn:active,
.btn.hover {
  text-decoration: none;
}
.btn.btn-gray {
  color: #999999;
  border-color: #999999;
  background: transparent;
}
.btn.btn-gray:hover,
.btn.btn-gray:active,
.btn.btn-gray.hover {
  color: #737373;
  border-color: #737373;
  background: transparent;
}
.btn.btn-primary {
  text-align: center;
  color: #76df7e;
  border-color: #76df7e;
  background: transparent;
}
.btn.btn-primary:hover,
.btn.btn-primary:active,
.btn.btn-primary.hover {
  color: #38d144;
  border-color: #38d144;
  background: transparent;
}
.btn.btn-success {
  color: #1aae88;
  border-color: #1aae88;
  background: transparent;
}
.btn.btn-success:hover,
.btn.btn-success:active,
.btn.btn-success.hover {
  color: #60e7c5;
  border-color: #60e7c5;
  background: transparent;
}
.btn.btn-info {
  color: #20c8aa;
  border-color: #20c8aa;
  background: transparent;
}
.btn.btn-info:hover,
.btn.btn-info:active,
.btn.btn-info.hover {
  color: #7dead7;
  border-color: #7dead7;
  background: transparent;
}
.btn.btn-danger {
  color: #ff8d7c;
  border-color: #ff8d7c;
  background: transparent;
}
.btn.btn-danger:hover,
.btn.btn-danger:active,
.btn.btn-danger.hover {
  color: #ff4a30;
  border-color: #ff4a30;
  background: transparent;
}
.btn.btn-warning {
  color: #fcc633;
  border-color: #fcc633;
  background: transparent;
}
.btn.btn-warning:hover,
.btn.btn-warning:active,
.btn.btn-warning.hover {
  color: #fee9b1;
  border-color: #fee9b1;
  background: transparent;
}
.btn.btn-file {
  position: relative;
  width: 120px;
  height: 35px;
  overflow: hidden;
}
.btn.btn-file > input[type='file'] {
  display: block !important;
  width: 100% !important;
  height: 35px !important;
  opacity: 0 !important;
  position: absolute;
  top: -10px;
  cursor: pointer;
}
input[type="text"].form-control,
input[type="password"].form-control,
textarea.form-control {
  outline: none;
  box-shadow: none;
  line-height: 34px;
  border: none;
  padding: 0 5px;
  resize: none;
  min-width: 300px;
}
input[type="text"].form-control:focus,
input[type="password"].form-control:focus,
textarea.form-control:focus {
  outline: none;
  box-shadow: none;
}
input[type="text"].form-control[disabled],
input[type="password"].form-control[disabled],
textarea.form-control[disabled] {
  border: 0 solid #000;
}
textarea.form-control {
  padding: 5px;
  line-height: 150%;
}
.list .title {
  padding-bottom: 20px;
  margin: 0;
  border-bottom: 1px #eee dashed;
  font-size: 16px;
}
.list .items {
  list-style: none;
}
.list .items .item {
  border-bottom: 1px #eee dashed;
  padding: 15px 0;
}
.list.horizontal {
  height: auto;
  width: auto;
}
.list.horizontal .item {
  display: inline-block;
  margin-right: 15px;
}
.link.grey {
  color: #676767;
}
.link.blue {
  color: #0073b7;
}
.link.aqua {
  color: #20c8aa;
}
.link.red {
  color: #ff8d7c;
}
.link.green {
  color: #1aae88;
}
.link.gray-light {
  color: #999999;
}
.pagination {
  list-style: none;
}
.pagination li {
  padding: 10px;
  cursor: pointer;
  display: inline-block;
}
.flex-display {
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: -ms-flex;
  display: flex;
}
.flex-1 {
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1;
}
.flex-2 {
  -webkit-flex: 2;
  -moz-flex: 2;
  -ms-flex: 2;
  flex: 2;
}
.flex-3 {
  -webkit-flex: 3;
  -moz-flex: 3;
  -ms-flex: 3;
  flex: 3;
}
.flex-3 {
  -webkit-flex: 3;
  -moz-flex: 3;
  -ms-flex: 3;
  flex: 3;
}
.flex-4 {
  -webkit-flex: 4;
  -moz-flex: 4;
  -ms-flex: 4;
  flex: 4;
}
.flex-5 {
  -webkit-flex: 5;
  -moz-flex: 5;
  -ms-flex: 5;
  flex: 5;
}
.flex-6 {
  -webkit-flex: 6;
  -moz-flex: 6;
  -ms-flex: 6;
  flex: 6;
}
.flex-7 {
  -webkit-flex: 7;
  -moz-flex: 7;
  -ms-flex: 7;
  flex: 7;
}
.flex-8 {
  -webkit-flex: 8;
  -moz-flex: 8;
  -ms-flex: 8;
  flex: 8;
}
.flex-9 {
  -webkit-flex: 9;
  -moz-flex: 9;
  -ms-flex: 9;
  flex: 9;
}
.flex-10 {
  -webkit-flex: 10;
  -moz-flex: 10;
  -ms-flex: 10;
  flex: 10;
}
.flex-11 {
  -webkit-flex: 11;
  -moz-flex: 11;
  -ms-flex: 11;
  flex: 11;
}
.flex-12 {
  -webkit-flex: 12;
  -moz-flex: 12;
  -ms-flex: 12;
  flex: 12;
}
.flex-none {
  -webkit-flex: none;
  -moz-flex: none;
  -ms-flex: none;
  flex: none;
}
.align-self-auto {
  -webkit-align-self: auto;
  -moz-align-self: auto;
  -ms-align-self: auto;
  align-self: auto;
}
.align-self-start {
  -webkit-align-self: flex-start;
  -moz-align-self: flex-start;
  -ms-align-self: flex-start;
  align-self: flex-start;
}
.align-self-end {
  -webkit-align-self: flex-end;
  -moz-align-self: flex-end;
  -ms-align-self: flex-end;
  align-self: flex-end;
}
.align-self-center {
  -webkit-align-self: center;
  -moz-align-self: center;
  -ms-align-self: center;
  align-self: center;
}
.align-self-baseline {
  -webkit-align-self: baseline;
  -moz-align-self: baseline;
  -ms-align-self: baseline;
  align-self: baseline;
}
.align-self-stretch {
  -webkit-align-self: stretch;
  -moz-align-self: stretch;
  -ms-align-self: stretch;
  align-self: stretch;
}
.align-items-auto {
  -webkit-align-items: auto;
  -moz-align-items: auto;
  -ms-align-items: auto;
  align-items: auto;
}
.align-items-start {
  -webkit-align-items: flex-start;
  -moz-align-items: flex-start;
  -ms-align-items: flex-start;
  align-items: flex-start;
}
.align-items-end {
  -webkit-align-items: flex-end;
  -moz-align-items: flex-end;
  -ms-align-items: flex-end;
  align-items: flex-end;
}
.align-items-center {
  -webkit-align-items: center;
  -moz-align-items: center;
  -ms-align-items: center;
  align-items: center;
}
.align-items-baseline {
  -webkit-align-items: baseline;
  -moz-align-items: baseline;
  -ms-align-items: baseline;
  align-items: baseline;
}
.align-items-stretch {
  -webkit-align-items: stretch;
  -moz-align-items: stretch;
  -ms-align-items: stretch;
  align-items: stretch;
}
.CodeMirror {
  height: auto !important;
  line-height: 1.45;
}
.CodeMirror-scroll {
  overflow-y: hidden;
  overflow-x: auto;
}
.tag-editor {
  display: block;
  position: relative;
  margin: 0;
  border: 0px solid #ccc;
  min-height: 40px;
  overflow: hidden;
  padding: 0 9px;
  font-weight: normal;
  background-color: #fff;
  color: #000;
  cursor: text;
  font-family: sans-serif;
  font-size: 16px;
}
.tag-suggestions {
  display: block;
}
.tag-editor .tag {
  display: inline-block;
  height: 24px;
  margin: 0 7px 0 0;
  background-color: #F2F2F2;
  color: #999;
  padding: 0 5px;
  border-radius: 2px;
  font-size: 14px;
  line-height: 24px;
  cursor: default;
}
.tag-editor .tag .remove {
  margin: 0 0 0 5px;
  font-weight: bold;
  cursor: pointer;
}
.tag-editor .tag-input {
  display: inline-block;
  width: auto;
  padding: 15px 0px;
  font-size: 14px;
  light-height: 16px;
  border: 0;
  margin: 0;
  outline: none;
  color: #999;
}
.tag-editor .tag-input:focus {
  box-shadow: none;
  outline: none;
}
.tag-editor.active {
  border-color: #aaa;
}
.tag-editor .tag-suggestions {
  cursor: auto;
}
.tag-editor .tag-suggestions .title {
  display: block;
  float: left;
  height: 25px;
  margin: 7px 7px 0 0;
  background-color: transparent;
  color: #888;
  font-weight: bold;
  padding: 0 5px;
  font-size: 14px;
  line-height: 25px;
}
.tag-editor .tag-suggestions .tag {
  cursor: pointer;
  background-color: #bdbdbd;
}
.image-uploader.noContent {
  overflow: hidden;
  background: #F9F8F5;
  border: #edece4 3px dashed;
  color: #aaa9a2;
  cursor: pointer;
  text-align: center;
  padding: 10px;
  position: relative;
}
.image-uploader.noContent .description {
  display: block;
}
.image-uploader.noContent .description:before {
  display: block;
  content: "\f03e";
  font-family: FontAwesome;
  font-size: 36px;
  margin: 10px;
}
.image-uploader.noContent input[type=file] {
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  margin: 0;
  opacity: 0;
  -ms-filter: 'alpha(opacity=0)';
  font-size: 200px;
  direction: ltr;
  cursor: pointer;
}
.image-uploader input {
  display: none;
}
.image-uploader .description {
  display: none;
}
.page.create .tags {
  border-bottom: 1px #eee solid;
}
.page.create .preview {
  border-left: 1px #eee solid;
}
.page.create a.type {
  display: inline-block;
  color: #eee;
  text-decoration: none;
}
.page.create a.type.active,
.page.create a.type:hover {
  color: #ccc;
  border-bottom: 2px #ccc solid;
}
.page.create input.title {
  font-size: 28px;
  font-weight: bold;
  width: 100%;
}
.page.create ::-webkit-input-placeholder {
  /* WebKit browsers */
  color: #6E6E6E;
  letter-spacing: 1px;
}
.page.create :-moz-placeholder {
  /* Mozilla Firefox 4 to 18 */
  color: #6E6E6E;
  letter-spacing: 1px;
}
.page.create ::-moz-placeholder {
  /* Mozilla Firefox 19+ */
  color: #6E6E6E;
  letter-spacing: 1px;
}
.page.create :-ms-input-placeholder {
  /* Internet Explorer 10+ */
  color: #6E6E6E;
  letter-spacing: 1px;
}
.page.create textarea {
  min-height: 300px;
}
.page.create header {
  display: flex;
  align-content: center;
  position: relative;
}
.page.create header .btn-publish {
  position: absolute;
  right: 10px;
  top: 50%;
  margin-top: -16px;
}
.label {
  color: #D9D9D9;
  margin: 0 3px 10px;
}
p {
  color: #999;
}
.page.posts .posts .post {
  border-bottom: 1px #f2f2f2 solid;
}
.page.posts .posts .post a.action {
  display: none;
  color: #aaa;
  margin-right: 5px;
}
.page.posts .posts .post:hover {
  background: #f2f2f2;
  cursor: pointer;
}
.page.posts .posts .post:hover a.action {
  display: inline-block;
}
.page.posts .posts .post a.title {
  color: #676767;
  font-size: 20px;
}
.page.posts .posts .post .brief {
  color: #999999;
}
.page.posts .posts .post .statistic {
  margin-right: 5px;
  color: #d9d9d9;
}
.newer {
  padding-right: 10px;
  float: right;
}
.older {
  padding-left: 10px;
}
.page.user h5 {
  margin-bottom: 0;
}
.page.user input {
  padding: 0 0;
}
.page.user .avatar img {
  max-height: 100px;
}
.page.user .page-head .item {
  width: auto;
  height: auto;
}
.page.statistics {
  color: #999999;
}
.page.statistics .visit {
  margin-right: 80px;
}
.page.statistics .comment {
  padding: 15px 0;
}
.page.statistics .comment img {
  float: left;
}
.page.statistics .comment .message {
  margin-left: 80px;
  color: #999999;
}
.page.statistics .comment .message .info {
  display: inline-block;
  color: #999999;
}
.page.statistics .comment .message .info a.name {
  color: #676767;
  margin-right: 10px;
}
.statistics.title {
  font-size: 16px;
  color: #333;
  border-bottom: 1px #eee dashed;
  padding-bottom: 20px;
  margin: 0;
}
.visits {
  display: inline-block;
  margin-right: 15px;
  color: #666;
}
.visits span {
  color: #999;
}
.avatar {
  padding-right: 15px;
  position: relative;
}
.avatar.small {
  max-height: 50px;
  max-width: 50px;
  border-right: 1px #efefef solid;
  box-sizing: content-box;
}
.avatar .fa-edit {
  display: none;
  position: absolute;
  right: 20px;
  top: 10px;
  cursor: pointer;
  padding: 2px;
}
.avatar:hover .fa-edit {
  display: block;
  background: #ccc;
  color: #333;
}
.page.user .item.username,
.page.user .item.email {
  width: 200px;
}
.about {
  padding-bottom: 20px;
  margin: 0;
  border-bottom: 1px #eee dashed;
}
.about-me {
  font-size: 16px;
  color: #333333;
}
.edit {
  display: inline-block;
  margin-left: 20px;
}
.clearfix:before,
.clearfix:after,
.dl-horizontal dd:before,
.dl-horizontal dd:after {
  content: " ";
  display: table;
}
.clearfix:after,
.dl-horizontal dd:after {
  clear: both;
}
.center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}
.pull-right {
  float: right !important;
}
.pull-left {
  float: left !important;
}
.hide {
  display: none !important;
}
.show {
  display: block !important;
}
.invisible {
  visibility: hidden;
}
.text-hide {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}
.hidden {
  display: none !important;
  visibility: hidden !important;
}
.affix {
  position: fixed;
}
.pd10 {
  padding: 10px;
}
.pdv10 {
  padding: 10px 0;
}
.pdh10 {
  padding: 0 10px;
}
.mg10 {
  margin: 10px;
}
.mgv10 {
  margin: 10px 0;
}
.mgh10 {
  margin: 0 10px;
}
.pd15 {
  padding: 15px;
}
.pdv15 {
  padding: 15px 0;
}
.pdh15 {
  padding: 0 15px;
}
.mg15 {
  margin: 15px;
}
.mgv15 {
  margin: 15px 0;
}
.mgh15 {
  margin: 0 15px;
}
.pd20 {
  padding: 20px;
}
.pdv20 {
  padding: 20px 0;
}
.pdh20 {
  padding: 0 20px;
}
.mg20 {
  margin: 20px;
}
.mgv20 {
  margin: 20px 0;
}
.mgh20 {
  margin: 0 20px;
}
.hw-auto {
  width: auto;
  height: auto;
}
@-ms-viewport {
  width: device-width;
}
.visible-xs,
.visible-sm,
.visible-md,
.visible-lg {
  display: none !important;
}
.visible-xs-block,
.visible-xs-inline,
.visible-xs-inline-block,
.visible-sm-block,
.visible-sm-inline,
.visible-sm-inline-block,
.visible-md-block,
.visible-md-inline,
.visible-md-inline-block,
.visible-lg-block,
.visible-lg-inline,
.visible-lg-inline-block {
  display: none !important;
}
@media (max-width: 767px) {
  .visible-xs {
    display: block !important;
  }
  table.visible-xs {
    display: table;
  }
  tr.visible-xs {
    display: table-row !important;
  }
  th.visible-xs,
  td.visible-xs {
    display: table-cell !important;
  }
}
@media (max-width: 767px) {
  .visible-xs-block {
    display: block !important;
  }
}
@media (max-width: 767px) {
  .visible-xs-inline {
    display: inline !important;
  }
}
@media (max-width: 767px) {
  .visible-xs-inline-block {
    display: inline-block !important;
  }
}
@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm {
    display: block !important;
  }
  table.visible-sm {
    display: table;
  }
  tr.visible-sm {
    display: table-row !important;
  }
  th.visible-sm,
  td.visible-sm {
    display: table-cell !important;
  }
}
@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-block {
    display: block !important;
  }
}
@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-inline {
    display: inline !important;
  }
}
@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-inline-block {
    display: inline-block !important;
  }
}
@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md {
    display: block !important;
  }
  table.visible-md {
    display: table;
  }
  tr.visible-md {
    display: table-row !important;
  }
  th.visible-md,
  td.visible-md {
    display: table-cell !important;
  }
}
@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-block {
    display: block !important;
  }
}
@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-inline {
    display: inline !important;
  }
}
@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-inline-block {
    display: inline-block !important;
  }
}
@media (min-width: 1200px) {
  .visible-lg {
    display: block !important;
  }
  table.visible-lg {
    display: table;
  }
  tr.visible-lg {
    display: table-row !important;
  }
  th.visible-lg,
  td.visible-lg {
    display: table-cell !important;
  }
}
@media (min-width: 1200px) {
  .visible-lg-block {
    display: block !important;
  }
}
@media (min-width: 1200px) {
  .visible-lg-inline {
    display: inline !important;
  }
}
@media (min-width: 1200px) {
  .visible-lg-inline-block {
    display: inline-block !important;
  }
}
@media (max-width: 767px) {
  .hidden-xs {
    display: none !important;
  }
}
@media (min-width: 768px) and (max-width: 991px) {
  .hidden-sm {
    display: none !important;
  }
}
@media (min-width: 992px) and (max-width: 1199px) {
  .hidden-md {
    display: none !important;
  }
}
@media (min-width: 1200px) {
  .hidden-lg {
    display: none !important;
  }
}
.visible-print {
  display: none !important;
}
@media print {
  .visible-print {
    display: block !important;
  }
  table.visible-print {
    display: table;
  }
  tr.visible-print {
    display: table-row !important;
  }
  th.visible-print,
  td.visible-print {
    display: table-cell !important;
  }
}
.visible-print-block {
  display: none !important;
}
@media print {
  .visible-print-block {
    display: block !important;
  }
}
.visible-print-inline {
  display: none !important;
}
@media print {
  .visible-print-inline {
    display: inline !important;
  }
}
.visible-print-inline-block {
  display: none !important;
}
@media print {
  .visible-print-inline-block {
    display: inline-block !important;
  }
}
@media print {
  .hidden-print {
    display: none !important;
  }
}


/*# sourceMappingURL=data:application/json;base64, */
